parameters:
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: appName
    type: string
  - name: name
    type: string
  - name: dependencies
    type: object
  - name: package
    type: string
jobs:
- job: Publish${{ parameters.name }}
  variables:
    ConfigStorageAccountName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.ConfigStorageAccountName'] ]
    webAppName: $[ dependencies.DeployInfrastructure.outputs['armOutputs.armOutput.${{parameters.appName }}'] ]

  pool:
    name: 'Azure Pipelines'
    vmImage: 'windows-2022'
  dependsOn:
    - "${{ each dependency in parameters.dependencies }}":
        - "${{dependency}}"
  
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appdrop'
      downloadPath: '$(System.ArtifactsDirectory)'
  
  - task: AzureRmWebAppDeployment@3
    displayName: 'Azure App Service Deploy: $(webAppName)'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      WebAppName: '$(webAppName)'
      DeployToSlotFlag: true
      ResourceGroupName: '$(ResourceGroupName)'
      SlotName: 'staging'
      Package: '$(System.ArtifactsDirectory)/appdrop/${{ parameters.package }}'
      UseWebDeploy: true
      RemoveAdditionalFilesFlag: true

  - task: AzureAppServiceManage@0
    displayName: 'Start staging Slot: $(webAppName)'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      Action: 'Start Azure App Service'
      WebAppName: '$(webAppName)'
      SpecifySlotOrASE: true
      ResourceGroupName: '$(ResourceGroupName)'
      Slot: 'staging'
  

  - task: AzureAppServiceManage@0
    displayName: 'Swap Slots: $(webAppName)'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      WebAppName: '$(webAppName)'
      ResourceGroupName: '$(ResourceGroupName)'
      SourceSlot: staging
  
  - task: AzureAppServiceManage@0
    displayName: 'Stop staging Slot: $(webAppName)'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      Action: 'Stop Azure App Service'
      WebAppName: '$(webAppName)'
      SpecifySlotOrASE: true
      ResourceGroupName: '$(ResourceGroupName)'
      Slot: 'staging'