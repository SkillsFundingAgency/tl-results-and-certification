parameters:
  - name: environmentTagName
    type: string
  - name: stageName
    type: string
  - name: dependencies
    type: object
    default: []
  - name: environmentName
    type: string
  - name: environmentId
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: serviceConnection
    type: string
  - name: applicationName
    type: string
  - name: variableTemplates
    type: object  

stages:
  - stage: Deploy_${{parameters.environmentId}}
    dependsOn:
      - "${{ each dependency in parameters.dependencies }}":
          - "${{dependency}}"
    variables:
      - group: platform-global-${{parameters.applicationName}}
      - group: platform-${{parameters.environmentName}}
      - group: platform-${{parameters.environmentName}}-${{parameters.applicationName}}
      - group: platform-${{parameters.environmentName}}-${{parameters.applicationName}}-kv
      - name: BaseName
        value: "s126${{parameters.environmentId}}-${{parameters.applicationName}}-${{parameters.environmentName}}"
      - name: ResourceGroupName
        value: "$(BaseName)"
      - name: EnvironmentName
        value: ${{ parameters.environmentName }}
      - name: environmentTagName
        value: ${{parameters.environmentTagName}}
      - '${{ each variableTemplate in parameters.variableTemplates }}':
        - template: '${{variableTemplate}}'
      - name: SharedBaseName
        value: "s126${{parameters.sharedEnvironmentId}}-${{parameters.applicationName}}"
      - name: SharedResourceGroup
        value: '$(SharedBaseName)-shared'     

    displayName: "${{parameters.environmentName}} [${{parameters.environmentId}}] deployment"
    jobs:
      - template: ../jobs/tlevels-infrastructure-job.yml
        parameters:
          BaseName: $(BaseName)
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          environmentName: ${{ parameters.environmentName }}

      - template: ../jobs/tlevels-publish-dacpac-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
      
      - template: ../jobs/tlevels-generate-configs-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          environmentName: ${{ parameters.environmentName }}
          ConfigurationSecrets: 
            DfeSignInApiSecret: $(DfeSignInApiSecret)
            DfeSignInClientSecret: $(DfeSignInClientSecret)
            GovUkNotifyApiKey: $(GovUkNotifyApiKey)
            LearningRecordServicePassword: $(LearningRecordServicePassword)
            OrdnanceSurveyPlacesApiPlacesKey: $(OrdnanceSurveyPlacesApiPlacesKey)
            PrintingApiPassword: $(PrintingApiPassword)
            RedisCacheConnection: $(RedisCacheConnection)
            ResacSQLServiceAccountPassword: $(ResacSQLServiceAccountPassword)
            SQLServerAdminPassword: $(SQLServerAdminPassword)
            sqlServerReplicaAdminPassword: $(sqlServerReplicaAdminPassword)
            UcasApiPassword: $(UcasApiPassword)

      - template: ../jobs/tlevels-integrationtest-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          environmentName: ${{ parameters.environmentName }}
      
      - template: ../jobs/tlevels-publish-site-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          appName: 'uiAppName'
          name: 'Website'
          dependencies:
            - DeployInfrastructure
            - GenerateConfigs
          package: 'Sfa.Tl.ResultsAndCertification.Web.zip'

      - template: ../jobs/tlevels-publish-site-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          appName: 'internalApiAppName'
          name: 'InternalAPI'
          dependencies:
            - PublishWebsite
            - DeployInfrastructure
            - GenerateConfigs
          package: 'Sfa.Tl.ResultsAndCertification.InternalApi.zip'


      - template: ../jobs/tlevels-publish-function-job.yml
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          sharedEnvironmentId: ${{ parameters.sharedEnvironmentId }}
          dependencies:
            - DeployInfrastructure
            - GenerateConfigs
            - PublishInternalAPI
          package:  'Sfa.Tl.ResultsAndCertification.Functions.zip'
      
      - template: ../jobs/tlevels-post-deployment-job.yml
        parameters:
          dependencies:
            - PublishWebsite
            - PublishInternalAPI
            - PublishFunction